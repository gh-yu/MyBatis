<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0 EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">
	<select id="getListCount" resultType="_int">
		select count(*)
		from board
		where b_status='Y'
	</select>
	
	<select id="selectBoardList" resultMap="boardResultSet">
		select bId, btype, btitle, bcontent, bwriter, nickname, bcount,
		       b_create_date, b_modify_date, b_status
		from board
			 join member on(bwriter = user_id)
	    where b_status = 'Y'
	    order by bid desc 
	</select>
	
	<resultMap type="Board" id="boardResultSet"> <!-- mybatis-config.xml에서 Board라고 typeAlias 지정함 -->
		<id column="BID" property="bId"/>
		<result column="BTYPE" property="bType"/>
		<result column="BTITLE" property="bTitle"/>
		<result column="BCONTENT" property="bContent"/>
		<result column="BWRITER" property="bWriter"/>
		<result column="NICKNAME" property="nickName"/>
		<result column="BCOUNT" property="bCount"/>
		<result column="B_CREATE_DATE" property="bCreateDate"/>
		<result column="B_MODIFY_DATE" property="bModifyDate"/>
		<result column="B_STATUS" property="bStatus"/>
	</resultMap>
	
	<update id="updateCount" parameterType="_int">
		update board
		set bCount = bCount + 1
		where bId = #{bId}
	</update>
	
	<select id="selectBoardDetail" parameterType="_int" resultMap="boardResultSet2">
		select bId, btype, btitle, bcontent, bwriter, bm.nickname b_nickname, bcount,
		       b_create_date, b_modify_date, b_status,
		       RID, RCONTENT, REF_BID, RWRITER, rm.nickname r_nickname, 
		       R_CREATE_DATE, R_MODIFY_DATE, R_STATUS
		from board 
		     join member bm on(bwriter = bm.user_id)
		     left join reply on(bid = ref_bid)
		     left join member rm on(rwriter = rm.user_id)  
		where bId = #{bId} and b_status='Y'
		order by rid
	</select>
	
	<resultMap type="Board" id="boardResultSet2">
		<id column="BID" property="bId"/>
		<result column="BTYPE" property="bType"/>
		<result column="BTITLE" property="bTitle"/>
		<result column="BCONTENT" property="bContent"/>
		<result column="BWRITER" property="bWriter"/>
		<result column="NICKNAME" property="nickName"/>
		<result column="BCOUNT" property="bCount"/>
		<result column="B_CREATE_DATE" property="bCreateDate"/>
		<result column="B_MODIFY_DATE" property="bModifyDate"/>
		<result column="B_STATUS" property="bStatus"/>
		<!-- 댓글 -->
		<!-- private ArrayList<Reply> replyList; -->
		<collection property="replyList" resultMap="replyResultSet" javaType="arrayList"/> 
		<!-- java.util.ArrayList로 써도 되고, MyBatis 자료형 별칭인 arrayList로 써도 됨 -->
	</resultMap>
	
	<resultMap type="Reply" id="replyResultSet">
		<id column="RID" property="rId"/>
		<result column="RCONTENT" property="rContent"/>
		<result column="REF_BID" property="refBid"/>
		<result column="RWRITER" property="rWriter"/>
		<result column="R_CREATE_DATE" property="rCreateDate"/>
		<result column="R_MODIFY_DATE" property="rModifyDate"/>
		<result column="R_STATUS" property="rStatus"/>		
	</resultMap>
	
	<select id="getSearchResultListCount" resultType="_int">
		select count(*)
		from board b
		     join member on(bwriter = user_id)
		where b_status = 'Y'
		<if test="condition == 'writer'">
			  and nickname = #{value}
		</if>		
		<if test="condition == 'title'">
			  and btitle like '%' || #{value} || '%'
		</if>			 
		<if test="condition == 'content'">
			  and bcontent like '%' || #{value} || '%'
		</if>
	</select>
	
	<select id="selectSearchResultList" parameterType="hashmap" resultMap="boardResultSet2">
		select bId, btype, btitle, bcontent, bwriter, nickname, bcount,
		       b_create_date, b_modify_date, b_status
		from board
			 join member on(bwriter = user_id)
	    where b_status = 'Y'
	    <choose>
	    	<when test="condition == 'writer'">
	    		and nickname = #{value}
	    	</when>
	    	<when test="condition == 'title'">
	    		and btitle like '%' || #{value} || '%'
	    	</when>
	    	<otherwise>
	    		and bcontent like '%' || #{value} || '%'
	    	</otherwise>
<!-- 	    	<otherwise> 
	    		and (nickname=#{value} or btitle like '%' || #{value} || '%' or bcontent like '%' || #{value} || '%')
	    	</otherwise> -->
	    </choose>
	    order by bid desc 
	</select>
	
</mapper>
