<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0/EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper"> <!-- 매퍼의 이름 지정 -->

	<select id="loginMember" parameterType="member.model.vo.Member" resultMap="memberResultSet"> 
		<!-- 엔터, 들여쓰기 가능 -> 쿼리 깔끔하게 볼 수 있음  -->
		select * 
		from member 
		where user_id = #{userId} <!-- # : 매퍼에서 사용하는 표현식 -> 유동적으로  -->
			 and user_pwd = #{userPwd}
			 and m_status = 'Y'
	</select> 
	<!-- 
		id : 외부(DAO)에서 참조하기 위한 쿼리문의 고유 아이디(구분자) - 쿼리를 구분하기 위한 식별자 
		parameterType : 구문에 전달될 파라미터의 패키지 경로를 포함한 전체 클래스 명 혹은 별칭
						(DAO에서 호출할때 두번째 매개변수 자리에 들어온 변수의 타입)
		resultType/resultMap : 쿼리 실행 후 조회된 결과를 자바에서 사용할 수 있게 하는 객체 
					 		   (DAO에 리턴할 객체의 타입) -> rset.getString("USER_ID") 할 필요 없이 알아서 변환해줌
		resultType은 객체의 필드명과  rset의 컬럼명이 일치해야함
		resultMap으로 일치하지 않아도 매핑시켜 해결
	-->
	
	<!-- DB의 컬럼과 클래스의 필드를 매핑시켜줄 때 사용 -->
	<!-- 일치해도 매핑시켜주는 것이 좋음(가끔 에러나기 때문) -->
	<resultMap type="member.model.vo.Member" id="memberResultSet">
		<id column="USER_PWD" property="userId"/> <!-- 기본 키 -->
		<result column="USER_PWD" property="userPwd"/> <!-- 일반 컬럼 -->
		<result column="USER_NAME" property="userName"/>
		<result column="NICKNAME" property="nickName"/>
		<result column="EMAIL" property="email"/>
		<result column="BIRTHDAY" property="birthDay"/>
		<result column="GENDER" property="gender"/>
		<result column="PHONE" property="phone"/>
		<result column="ADDRESS" property="address"/>
		<result column="ENROLL_DATE" property="enrollDate"/>
		<result column="UPDATE_DATE" property="updateDate"/>
		<result column="M_STATUS" property="mStatus"/>
	</resultMap>
	
	<insert id="insertMember" parameterType="member.model.vo.Member" resultType="_int">
		insert into member values(#{userId}, #{userPwd}, #{userName}, #{nickName}
								  #{email}, #{birthDay}, #{gender}, #{phone}, #{address}, 
								  SYSDATE, SYSDATE, DEFAULT);
	</insert>
	
</mapper>